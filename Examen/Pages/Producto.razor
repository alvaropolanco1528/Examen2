@page "/Productos"
<h3>Registro de Productos</h3>

<EditForm Model="Producto" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="id">Producto Id</label>
        <InputNumber @bind-Value="@producto.ProductoId" class="form-control" />
        <ValidationMessage For="@(()=>producto.ProductoId)" />
        <button type="button" class="btn btn-secondary" @onclick="Buscar">Buscar</button>
    </div>

    <div class="form-group">
        <label for="Fecha">Fecha</label>
        <InputDate @bind-Value="@producto.Fecha" class="form-control" />
        <ValidationMessage For="@(()=>producto.Fecha)" />
    </div>

    <div class="form-group">
        <label for="descripcion">Descripcion</label>
        <InputText @bind-Value="@producto.Descripcion" class="form-control" />
        <ValidationMessage For="@(()=>producto.Descripcion)" />
    </div>

    <div class="form-group">
        <label for="costo">Costo</label>
        <InputNumber @bind-Value="@producto.Costo" class="form-control" @oninput="CalcularPrecio" />
        <ValidationMessage For="@(()=>producto.Costo)" />
    </div>

    <div class="form-group">
        <label for="ganancia">Ganancia</label>
        <InputNumber @bind-Value="@Producto.Ganancia" class="form-control" @oninput="CalcularPrecio" />
        <ValidationMessage For="@(()=>Producto.Ganancia)" />
    </div>

    <div class="form-group">
        <label for="precio">Precio</label>
        <InputNumber @bind-Value="@Producto.Precio" class="form-control" />
        <ValidationMessage For="@(()=>Producto.Precio)" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-outline-secondary">Guardar</button>
        <button type="button" class="btn btn-outline-danger" @onclick="Eliminar">Eliminar</button>
    </div>

    <h5>@mensaje</h5>


</EditForm>


@code {

    public Producto producto = new Producto();
    public string mensaje = "";

    public void Guardar()
    {
        CalcularPrecio();
        ControlProductos controller = new ControlProductos();

        if (controller.Guardar(producto))
        {
            this.producto = new Producto();
            mensaje = "Producto Guardado";
        }
        else
        {
            this.producto = new Producto();
            mensaje = "Error al guardar";
        }
    }

    public void Buscar()
    {
        ControlProductos controller = new ControlProductos();

        var producto = controller.Buscar(Producto.ProductoId);

        if (producto != null)
        {
            Producto = producto;
        }
        else
        {
            this.producto = new Producto();
            mensaje = "Producto no encontrado";
        }
    }

    public void Eliminar()
    {
        ControlProductos controller = new ControlProductos();

        var producto = controller.Buscar(producto.ProductoId);

        if (producto != null)
        {
            if (controller.Eliminar(Producto.ProductoId))
            {
                this.producto = new Producto();
                mensaje = "Producto Eliminado";
            }
            else
            {
                this.producto = new Producto();
                mensaje = "Error al Eliminar";
            }
        }
    }

    public void CalcularPrecio()
    {
        if (producto != null)
        {
            producto.Precio = Producto.Costo + Producto.Costo * Producto.Ganancia / 100;
        }
    }
}